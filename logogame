
package com.mycompany.javaproject;



import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;

public class Javaproject extends JFrame {
    private static final String[] WORDS = {
            "java", "python", "kotlin", "html", "javascript", "css", "vscode", "netbeans"
    };
    private static final String[] IMAGE_PATHS = {
            "C:\\Users\\abhis\\Videos\\Captures\\java.jpg",
            "C:\\Users\\abhis\\Videos\\Captures\\python.jpg",
            "C:\\Users\\abhis\\Videos\\Captures\\kotlin.jpg",
            "C:\\Users\\abhis\\Videos\\Captures\\html.jpg",
            "C:\\Users\\abhis\\Videos\\Captures\\javascript.jpg",
            "C:\\Users\\abhis\\Videos\\Captures\\css.jpg",
            "C:\\Users\\abhis\\Videos\\Captures\\vscode.jpg",
            "C:\\Users\\abhis\\Videos\\Captures\\netbeans.jpg"
    };

    private int level = 1;
    private int score = 0;
    private final JTextField guessField;
    private final JLabel feedbackLabel;
    private final JLabel scoreLabel;
    private final JLabel levelLabel;
    private final JButton nextButton;
    private final JLabel attemptsLabel; // New label for attempts
    private final Random random;
    private int currentWordIndex;
    private int attempts = 3; // Variable to track attempts

    public Javaproject() {
        // Frame settings
        setTitle("Guess Word");
        setSize(500, 500);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout(10, 10));
        getContentPane().setBackground(new Color(4, 0, 83)); // Light color background

        // Random object
        random = new Random();
        currentWordIndex = random.nextInt(WORDS.length);

        // Top panel for level and score labels
        JPanel topPanel = new JPanel(new BorderLayout());
        levelLabel = new JLabel("Level: " + level);
        levelLabel.setFont(new Font("Arial", Font.BOLD, 18));
        topPanel.setBackground(new Color(4, 0, 83));
        levelLabel.setForeground(Color.white);
        levelLabel.setBorder(BorderFactory.createEmptyBorder(10, 20, 10, 10));
        topPanel.add(levelLabel, BorderLayout.WEST);

        scoreLabel = new JLabel("Score: " + score);
        scoreLabel.setFont(new Font("Arial", Font.BOLD, 16));
        scoreLabel.setForeground(Color.white);
        scoreLabel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 20));
        topPanel.add(scoreLabel, BorderLayout.EAST);
        add(topPanel, BorderLayout.NORTH);

        // Center panel for the image and user input
        JPanel centerPanel = new JPanel();
        centerPanel.setBackground(new Color(4, 0, 83));
        centerPanel.setBorder(BorderFactory.createEmptyBorder(50, 0, 10, 0));
        centerPanel.setLayout(new BoxLayout(centerPanel, BoxLayout.Y_AXIS));

        // Displaying the image
        JLabel imageLabel = new JLabel();
        ImageIcon imageIcon = new ImageIcon(IMAGE_PATHS[currentWordIndex]);
        imageLabel.setIcon(imageIcon);
        imageLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        imageLabel.setBorder(BorderFactory.createEmptyBorder(0, 10, 10, 10));
        centerPanel.add(imageLabel);

        // Input field for user's guess
        guessField = new JTextField(15);
        guessField.setMaximumSize(new Dimension(200, 30));
        centerPanel.add(guessField);

        // Feedback label
        feedbackLabel = new JLabel("");
        feedbackLabel.setFont(new Font("Arial", Font.BOLD, 14));
        feedbackLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        feedbackLabel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        centerPanel.add(feedbackLabel);
        add(centerPanel);

        // Bottom panel for the next button
        JPanel bottomPanel = new JPanel(new BorderLayout()); // Aligning to the right
        attemptsLabel = new JLabel("Attempts left: " + attempts);
        attemptsLabel.setFont(new Font("Arial", Font.BOLD, 14));
        attemptsLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        attemptsLabel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        bottomPanel.add(attemptsLabel, BorderLayout.WEST);

        nextButton = new JButton("Submit");
        nextButton.addActionListener(new SubmitButtonListener());
        nextButton.setPreferredSize(new Dimension(100, 30)); // Adjust the size as needed
        bottomPanel.add(nextButton,BorderLayout.EAST);
        add(bottomPanel, BorderLayout.SOUTH);

        // Add attempts label
        
        

        setVisible(true);
    }

    private class SubmitButtonListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            String guess = guessField.getText().trim().toLowerCase();
            if (guess.equals(WORDS[currentWordIndex])) {
                feedbackLabel.setText("Correct!");
                feedbackLabel.setForeground(Color.GREEN);
                score += 10;
                level++;
                scoreLabel.setText("Score: " + score);
                levelLabel.setText("Level: " + level);
                attempts = 3; // Reset attempts on correct guess
                attemptsLabel.setText("Attempts left: " + attempts);

                // Show options for next steps
                int response = JOptionPane.showOptionDialog(
                        Javaproject.this,
                        "Correct! What would you like to do next?",
                        "Next Options",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.INFORMATION_MESSAGE,
                        null,
                        new Object[]{"Next", "Main Menu"},
                        null
                );

                if (response == JOptionPane.YES_OPTION) {
                    // Load the next word and image
                    currentWordIndex = random.nextInt(WORDS.length);
                    ImageIcon newImageIcon = new ImageIcon(IMAGE_PATHS[currentWordIndex]);
                    ((JLabel) ((JPanel) getContentPane().getComponent(1)).getComponent(0)).setIcon(newImageIcon);
                    guessField.setText(""); // Clear the guess field
                    feedbackLabel.setText(""); // Clear feedback
                } else {
                    dispose(); // Go back to the main menu
                    new MainMenu();
                }
            } else {
                attempts--; // Decrease attempts on incorrect guess
                attemptsLabel.setText("Attempts left: " + attempts);
                feedbackLabel.setText("Incorrect! Try again.");
                feedbackLabel.setForeground(Color.RED);

                // Check if no attempts left
                if (attempts <= 0) {
                    JOptionPane.showMessageDialog(Javaproject.this,
                            "No attempts left! The correct word was: " + WORDS[currentWordIndex],
                            "Game Over",
                            JOptionPane.INFORMATION_MESSAGE);
                    dispose(); // End the game or go to main menu
                    new MainMenu();
                }
            }
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(MainMenu::new);
    }
}
